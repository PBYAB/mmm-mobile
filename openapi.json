{
  "openapi": "3.0.1",
  "info": {
    "contact": {
      "email": "contact@mmm.com",
      "name": "MMM",
      "url": "https://wi.pb.edu.pl"
    },
    "description": "OpenApi documentation for MMM",
    "license": {
      "name": "MIT License",
      "url": "https://choosealicense.com/licenses/mit"
    },
    "termsOfService": "Terms of service",
    "title": "OpenApi specification - MMM",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local ENV"
    },
    {
      "url": "http://57.128.194.195",
      "description": "PROD ENV"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "description": "Product APIs",
      "name": "Product"
    },
    {
      "description": "Ingredient APIs",
      "name": "Ingredient"
    },
    {
      "description": "Category APIs",
      "name": "Category"
    },
    {
      "description": "Authentication APIs",
      "name": "1. Authentication"
    },
    {
      "description": "Allergen APIs",
      "name": "Allergen"
    },
    {
      "description": "Brand APIs",
      "name": "Brand"
    },
    {
      "description": "Article Category APIs",
      "name": "ArticleCategory"
    },
    {
      "description": "Country APIs",
      "name": "Country"
    },
    {
      "description": "ProductIngredient APIs",
      "name": "ProductIngredient"
    },
    {
      "description": "RecipeReview APIs",
      "name": "RecipeReview"
    },
    {
      "description": "Recipe APIs",
      "name": "Recipe"
    },
    {
      "description": "Article APIs",
      "name": "Article"
    }
  ],
  "paths": {
    "/api/v1/allergens": {
      "get": {
        "operationId": "listAllergens",
        "parameters": [
          {
            "in": "query",
            "name": "pageable",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "List all allergens with pagination",
        "tags": [
          "Allergen"
        ]
      },
      "post": {
        "operationId": "createAllergen",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAllergenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Allergen created successfully"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request - Invalid input data or validation errors"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Forbidden - Access denied"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create a new allergen",
        "tags": [
          "Allergen"
        ]
      }
    },
    "/api/v1/allergens/{id}": {
      "delete": {
        "operationId": "deleteAllergenById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "No Content - Allergen deleted successfully"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found - Allergen with the specified ID not found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Delete allergen by ID",
        "tags": [
          "Allergen"
        ]
      },
      "get": {
        "operationId": "findAllergenById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Allergen"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found - Allergen with the specified ID not found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Find a allergen by ID",
        "tags": [
          "Allergen"
        ]
      },
      "put": {
        "operationId": "updateAllergenById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAllergenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "No Content - Allergen updated successfully"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found - Allergen with the specified ID not found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Update allergen by ID",
        "tags": [
          "Allergen"
        ]
      }
    },
    "/api/v1/auth/authenticate": {
      "post": {
        "operationId": "authenticate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Authentication Error"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Authenticate a user",
        "tags": [
          "1. Authentication"
        ]
      }
    },
    "/api/v1/auth/refresh-token": {
      "post": {
        "operationId": "refreshToken",
        "responses": {
          "204": {
            "description": "Token Refreshed"
          },
          "400": {
            "content": {},
            "description": "Refresh Error"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Refresh a token",
        "tags": [
          "1. Authentication"
        ]
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "operationId": "register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {},
            "description": "Validation Error"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Register a new user",
        "tags": [
          "1. Authentication"
        ]
      }
    },
    "/api/v1/brands": {
      "get": {
        "operationId": "getAllBrands",
        "parameters": [
          {
            "in": "query",
            "name": "pageable",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Get all brands",
        "tags": [
          "Brand"
        ]
      },
      "post": {
        "operationId": "createBrand",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBrandRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Brand"
                }
              }
            },
            "description": "Brand created successfully"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request - Invalid input data or validation errors"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Forbidden - Access denied"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create a new brand",
        "tags": [
          "Brand"
        ]
      }
    },
    "/api/v1/brands/{id}": {
      "delete": {
        "operationId": "deleteBrandById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "No content - successfully deleted"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Delete brand by ID",
        "tags": [
          "Brand"
        ]
      },
      "get": {
        "operationId": "getBrandById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Brand"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Get brand by ID",
        "tags": [
          "Brand"
        ]
      },
      "put": {
        "operationId": "updateBrandById_1",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBrandRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Update brand by ID",
        "tags": [
          "Brand"
        ]
      }
    },
    "/api/v1/categories": {
      "get": {
        "operationId": "getCategories",
        "parameters": [
          {
            "in": "query",
            "name": "pageable",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Get a list of all categories",
        "tags": [
          "Category"
        ]
      },
      "post": {
        "operationId": "createCategory_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductCategoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            },
            "description": "Country created successfully"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request - Invalid input data or validation errors"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "description": "Forbidden - Access denied"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create a new category",
        "tags": [
          "Category"
        ]
      }
    },
    "/api/v1/categories/{id}": {
      "delete": {
        "operationId": "deleteCategory",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Country deleted successfully"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Forbidden - Access denied"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Country not found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Delete an existing category",
        "tags": [
          "Category"
        ]
      },
      "get": {
        "operationId": "getCategory",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Country not found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Get a category by ID",
        "tags": [
          "Category"
        ]
      },
      "put": {
        "operationId": "updateCategory",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductCategoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Country updated successfully"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request - Invalid input data or validation errors"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Forbidden - Access denied"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Country not found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Update an existing country",
        "tags": [
          "Category"
        ]
      }
    },
    "/api/v1/countries": {
      "get": {
        "operationId": "getCountries",
        "parameters": [
          {
            "in": "query",
            "name": "pageable",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Get a list of all countries",
        "tags": [
          "Country"
        ]
      },
      "post": {
        "operationId": "createCountry",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCountryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            },
            "description": "Country created successfully"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request - Invalid input data or validation errors"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            },
            "description": "Forbidden - Access denied"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create a new country",
        "tags": [
          "Country"
        ]
      }
    },
    "/api/v1/countries/{id}": {
      "delete": {
        "operationId": "deleteCountry",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Country deleted successfully"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Forbidden - Access denied"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Country not found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Delete an existing country",
        "tags": [
          "Country"
        ]
      },
      "get": {
        "operationId": "getCountry",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Country not found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Get a country by ID",
        "tags": [
          "Country"
        ]
      },
      "put": {
        "operationId": "updateCountry",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCountryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Country updated successfully"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request - Invalid input data or validation errors"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Forbidden - Access denied"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Country not found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Update an existing country",
        "tags": [
          "Country"
        ]
      }
    },
    "/api/v1/ingredients": {
      "get": {
        "operationId": "findAll",
        "parameters": [
          {
            "in": "query",
            "name": "pageable",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Page"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "List all ingredients",
        "tags": [
          "Ingredient"
        ]
      },
      "post": {
        "operationId": "createIngredient",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIngredientRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Ingredient"
                }
              }
            },
            "description": "Created successfully"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request - Invalid input data or validation errors"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Ingredient"
                }
              }
            },
            "description": "Forbidden - Access denied"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create a new ingredient",
        "tags": [
          "Ingredient"
        ]
      }
    },
    "/api/v1/knowledgeBase/articles": {
      "get": {
        "operationId": "listCategories_1",
        "parameters": [
          {
            "in": "query",
            "name": "pageable",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "List all categories with pagination",
        "tags": [
          "Article"
        ]
      },
      "post": {
        "operationId": "createArticle",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateArticleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Article created successfully"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request - Invalid input data or validation errors"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Forbidden - Access denied"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create a new article",
        "tags": [
          "Article"
        ]
      }
    },
    "/api/v1/knowledgeBase/articles/{id}": {
      "get": {
        "operationId": "findArticleById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArticleDTO"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found - Article with the specified ID not found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Find an article by ID",
        "tags": [
          "Article"
        ]
      }
    },
    "/api/v1/knowledgeBase/categories": {
      "get": {
        "operationId": "listCategories",
        "parameters": [
          {
            "in": "query",
            "name": "pageable",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "List all categories with pagination",
        "tags": [
          "ArticleCategory"
        ]
      },
      "post": {
        "operationId": "createCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateArticleCategoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Category created successfully"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request - Invalid input data or validation errors"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Forbidden - Access denied"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create a new category",
        "tags": [
          "ArticleCategory"
        ]
      }
    },
    "/api/v1/knowledgeBase/categories/{id}": {
      "get": {
        "operationId": "findCategoryById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArticleCategoryDTO"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found - Category with the specified ID not found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Find a category by ID",
        "tags": [
          "ArticleCategory"
        ]
      }
    },
    "/api/v1/products": {
      "get": {
        "operationId": "getProducts",
        "parameters": [
          {
            "in": "query",
            "name": "pageable",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Get all products",
        "tags": [
          "Product"
        ]
      },
      "post": {
        "operationId": "createProduct",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Product created successfully"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request - Invalid input data or validation errors"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Forbidden - Access denied"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create a new product",
        "tags": [
          "Product"
        ]
      }
    },
    "/api/v1/products/barcode/{barcode}": {
      "get": {
        "operationId": "getProductByBarcode",
        "parameters": [
          {
            "in": "path",
            "name": "barcode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Product not found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Get a product by barcode",
        "tags": [
          "Product"
        ]
      }
    },
    "/api/v1/products/ingredients": {
      "get": {
        "operationId": "getProductIngredients",
        "parameters": [
          {
            "in": "query",
            "name": "pageable",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductIngredient"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Get a list of all product ingredients",
        "tags": [
          "ProductIngredient"
        ]
      },
      "post": {
        "operationId": "createProductIngredient",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductIngredientRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductIngredient"
                }
              }
            },
            "description": "Product ingredient created successfully"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request - Invalid input data or validation errors"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductIngredient"
                }
              }
            },
            "description": "Forbidden - Access denied"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create a new product ingredient",
        "tags": [
          "ProductIngredient"
        ]
      }
    },
    "/api/v1/products/ingredients/{id}": {
      "delete": {
        "operationId": "deleteProductIngredient",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Country deleted successfully"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Forbidden - Access denied"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Country not found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Delete an existing category",
        "tags": [
          "ProductIngredient"
        ]
      },
      "get": {
        "operationId": "getProductIngredient_1",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductIngredient"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Product ingredient not found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Get a product ingredient by ID",
        "tags": [
          "ProductIngredient"
        ]
      },
      "put": {
        "operationId": "updateProductIngredient",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductIngredientRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Country updated successfully"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request - Invalid input data or validation errors"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Forbidden - Access denied"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Country not found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Update an existing country",
        "tags": [
          "ProductIngredient"
        ]
      }
    },
    "/api/v1/products/{id}": {
      "delete": {
        "operationId": "deleteProduct",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Product deleted successfully"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Product not found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Delete a product",
        "tags": [
          "Product"
        ]
      },
      "get": {
        "operationId": "getProduct",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Product not found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Get a product by ID",
        "tags": [
          "Product"
        ]
      },
      "put": {
        "operationId": "updateProduct",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            },
            "description": "Product updated successfully"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request - Invalid input data or validation errors"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Forbidden - Access denied"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Product not found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Update a product",
        "tags": [
          "Product"
        ]
      }
    },
    "/api/v1/recipes": {
      "get": {
        "operationId": "getRecipes",
        "parameters": [
          {
            "in": "query",
            "name": "pageable",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageRecipeListItem"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Get a list of all recipes",
        "tags": [
          "Recipe"
        ]
      },
      "post": {
        "operationId": "createRecipe",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRecipeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Recipe created successfully"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request - Invalid input data or validation errors"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Forbidden - User is not allowed to create a recipe"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create a new recipe",
        "tags": [
          "Recipe"
        ]
      }
    },
    "/api/v1/recipes/{id}": {
      "delete": {
        "operationId": "deleteById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "No content - successfully deleted"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Delete recipe by ID",
        "tags": [
          "Recipe"
        ]
      },
      "get": {
        "operationId": "getRecipe",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Recipe"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found - Recipe with given ID does not exist"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Get a single recipe",
        "tags": [
          "Recipe"
        ]
      },
      "put": {
        "operationId": "updateBrandById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRecipeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Update",
        "tags": [
          "Recipe"
        ]
      }
    },
    "/api/v1/recipes/{id}/review": {
      "post": {
        "operationId": "addReview",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRecipeReviewRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Review created successfully"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request - Invalid input data or validation errors"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Forbidden - User is not allowed to create a review"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Add review to recipe",
        "tags": [
          "Recipe"
        ]
      }
    },
    "/api/v1/review": {
      "get": {
        "operationId": "getRecipeReview",
        "parameters": [
          {
            "in": "query",
            "name": "pageable",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeReview"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Get a list of all product ingredients",
        "tags": [
          "RecipeReview"
        ]
      },
      "post": {
        "operationId": "createRecipeReview",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRecipeReviewRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeReview"
                }
              }
            },
            "description": "Product ingredient created successfully"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request - Invalid input data or validation errors"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeReview"
                }
              }
            },
            "description": "Forbidden - Access denied"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Create a new product ingredient",
        "tags": [
          "RecipeReview"
        ]
      }
    },
    "/api/v1/review/{id}": {
      "delete": {
        "operationId": "deleteRecipeReview",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Country deleted successfully"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Forbidden - Access denied"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Country not found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Delete an existing category",
        "tags": [
          "RecipeReview"
        ]
      },
      "get": {
        "operationId": "getProductIngredient",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeReview"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Product ingredient not found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Get a product ingredient by ID",
        "tags": [
          "RecipeReview"
        ]
      },
      "put": {
        "operationId": "updateRecipeReview",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRecipeReviewRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Country updated successfully"
          },
          "400": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Bad Request - Invalid input data or validation errors"
          },
          "403": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Forbidden - Access denied"
          },
          "404": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Country not found"
          },
          "409": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Update an existing country",
        "tags": [
          "RecipeReview"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Allergen": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "AllergenDTO": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ArticleCategoryDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ArticleDTO": {
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/ArticleCategoryDTO"
          },
          "content": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "PUBLISHED",
              "DRAFT"
            ]
          },
          "title": {
            "type": "string"
          }
        }
      },
      "AuthenticationRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "AuthenticationResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "Brand": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "BrandDTO": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Category": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "CategoryDTO": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Country": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "CountryDTO": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "CreateAllergenRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "CreateArticleCategoryRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "CreateArticleRequest": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int64"
          },
          "content": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "PUBLISHED",
              "DRAFT"
            ]
          },
          "title": {
            "type": "string"
          }
        }
      },
      "CreateBrandRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "CreateCountryRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "CreateIngredientRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "CreateNutrimentRequest": {
        "required": [
          "energyKcalPer100g",
          "fatPer100g",
          "fiberPer100g",
          "proteinsPer100g",
          "saltPer100g",
          "sodiumPer100g",
          "sugarsPer100g"
        ],
        "type": "object",
        "properties": {
          "energyKcalPer100g": {
            "type": "number",
            "format": "double"
          },
          "fatPer100g": {
            "type": "number",
            "format": "double"
          },
          "fiberPer100g": {
            "type": "number",
            "format": "double"
          },
          "proteinsPer100g": {
            "type": "number",
            "format": "double"
          },
          "saltPer100g": {
            "type": "number",
            "format": "double"
          },
          "sodiumPer100g": {
            "type": "number",
            "format": "double"
          },
          "sugarsPer100g": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "CreateProductCategoryRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "CreateProductIngredientAnalysisRequest": {
        "required": [
          "fromPalmOil",
          "ingredientsDescription",
          "vegan",
          "vegetarian"
        ],
        "type": "object",
        "properties": {
          "fromPalmOil": {
            "type": "boolean"
          },
          "ingredientsDescription": {
            "type": "string"
          },
          "vegan": {
            "type": "boolean"
          },
          "vegetarian": {
            "type": "boolean"
          }
        }
      },
      "CreateProductIngredientRequest": {
        "required": [
          "fromPalmOil",
          "name",
          "vegan",
          "vegetarian"
        ],
        "type": "object",
        "properties": {
          "fromPalmOil": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "vegan": {
            "type": "boolean"
          },
          "vegetarian": {
            "type": "boolean"
          }
        }
      },
      "CreateProductRequest": {
        "required": [
          "allergensId",
          "barcode",
          "brandsId",
          "categoriesId",
          "countriesId",
          "ingredientAnalysis",
          "ingredientsId",
          "name",
          "novaGroup",
          "nutriScore",
          "nutriment",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "allergensId": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "barcode": {
            "type": "string"
          },
          "brandsId": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "categoriesId": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "countriesId": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "ingredientAnalysis": {
            "$ref": "#/components/schemas/CreateProductIngredientAnalysisRequest"
          },
          "ingredientsId": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "name": {
            "type": "string"
          },
          "novaGroup": {
            "type": "integer",
            "format": "int32"
          },
          "nutriScore": {
            "type": "integer",
            "format": "int32"
          },
          "nutriment": {
            "$ref": "#/components/schemas/CreateNutrimentRequest"
          },
          "quantity": {
            "type": "string"
          }
        }
      },
      "CreateRecipeRequest": {
        "required": [
          "instructions"
        ],
        "type": "object",
        "properties": {
          "ingredients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipeIngredientForm"
            }
          },
          "instructions": {
            "type": "string"
          },
          "kcalPerServing": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string"
          },
          "servings": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateRecipeReviewRequest": {
        "required": [
          "rating"
        ],
        "type": "object",
        "properties": {
          "comment": {
            "type": "string"
          },
          "rating": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "Ingredient": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "recipeIngredients": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipeIngredient"
            }
          }
        }
      },
      "Nutriment": {
        "type": "object",
        "properties": {
          "energyKcalPer100g": {
            "type": "number",
            "format": "double"
          },
          "fatPer100g": {
            "type": "number",
            "format": "double"
          },
          "fiberPer100g": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "proteinsPer100g": {
            "type": "number",
            "format": "double"
          },
          "saltPer100g": {
            "type": "number",
            "format": "double"
          },
          "sodiumPer100g": {
            "type": "number",
            "format": "double"
          },
          "sugarsPer100g": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "NutrimentDTO": {
        "required": [
          "energyKcalPer100g",
          "fatPer100g",
          "fiberPer100g",
          "proteinsPer100g",
          "saltPer100g",
          "sodiumPer100g",
          "sugarsPer100g"
        ],
        "type": "object",
        "properties": {
          "energyKcalPer100g": {
            "type": "number",
            "format": "double"
          },
          "fatPer100g": {
            "type": "number",
            "format": "double"
          },
          "fiberPer100g": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "proteinsPer100g": {
            "type": "number",
            "format": "double"
          },
          "saltPer100g": {
            "type": "number",
            "format": "double"
          },
          "sodiumPer100g": {
            "type": "number",
            "format": "double"
          },
          "sugarsPer100g": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "Page": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PageRecipeListItem": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipeListItem"
            }
          },
          "empty": {
            "type": "boolean"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Pageable": {
        "type": "object",
        "properties": {
          "page": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PageableObject": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "paged": {
            "type": "boolean"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "unpaged": {
            "type": "boolean"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "allergens": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Allergen"
            }
          },
          "barcode": {
            "type": "string"
          },
          "brands": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Brand"
            }
          },
          "categories": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          },
          "countries": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Country"
            }
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "ingredientAnalysis": {
            "$ref": "#/components/schemas/ProductIngredientAnalysis"
          },
          "ingredients": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductIngredient"
            }
          },
          "name": {
            "type": "string"
          },
          "novaGroup": {
            "type": "integer",
            "format": "int32"
          },
          "nutriScore": {
            "type": "integer",
            "format": "int32"
          },
          "nutriment": {
            "$ref": "#/components/schemas/Nutriment"
          },
          "quantity": {
            "type": "string"
          }
        }
      },
      "ProductDTO": {
        "required": [
          "allergens",
          "barcode",
          "brands",
          "categories",
          "countries",
          "ingredientAnalysis",
          "name",
          "novaGroup",
          "nutriScore",
          "nutriment",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "allergens": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllergenDTO"
            }
          },
          "barcode": {
            "type": "string"
          },
          "brands": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BrandDTO"
            }
          },
          "categories": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryDTO"
            }
          },
          "countries": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryDTO"
            }
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "ingredientAnalysis": {
            "$ref": "#/components/schemas/ProductIngredientAnalysisDTO"
          },
          "ingredients": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductIngredientDTO"
            }
          },
          "name": {
            "type": "string"
          },
          "novaGroup": {
            "type": "integer",
            "format": "int32"
          },
          "nutriScore": {
            "type": "integer",
            "format": "int32"
          },
          "nutriment": {
            "$ref": "#/components/schemas/NutrimentDTO"
          },
          "quantity": {
            "type": "string"
          }
        }
      },
      "ProductIngredient": {
        "type": "object",
        "properties": {
          "fromPalmOil": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "vegan": {
            "type": "boolean"
          },
          "vegetarian": {
            "type": "boolean"
          }
        }
      },
      "ProductIngredientAnalysis": {
        "type": "object",
        "properties": {
          "fromPalmOil": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "ingredientsDescription": {
            "type": "string"
          },
          "vegan": {
            "type": "boolean"
          },
          "vegetarian": {
            "type": "boolean"
          }
        }
      },
      "ProductIngredientAnalysisDTO": {
        "required": [
          "fromPalmOil",
          "ingredientsDescription",
          "vegan",
          "vegetarian"
        ],
        "type": "object",
        "properties": {
          "fromPalmOil": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "ingredientsDescription": {
            "type": "string"
          },
          "vegan": {
            "type": "boolean"
          },
          "vegetarian": {
            "type": "boolean"
          }
        }
      },
      "ProductIngredientDTO": {
        "required": [
          "fromPalmOil",
          "name",
          "vegan",
          "vegetarian"
        ],
        "type": "object",
        "properties": {
          "fromPalmOil": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "vegan": {
            "type": "boolean"
          },
          "vegetarian": {
            "type": "boolean"
          }
        }
      },
      "Recipe": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "ingredients": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipeIngredient"
            }
          },
          "instructions": {
            "type": "string"
          },
          "kcalPerServing": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string"
          },
          "reviews": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipeReview"
            }
          },
          "servings": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RecipeIngredient": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "ingredient": {
            "$ref": "#/components/schemas/Ingredient"
          },
          "recipe": {
            "$ref": "#/components/schemas/Recipe"
          },
          "unit": {
            "type": "string",
            "enum": [
              "G",
              "ML",
              "TSP",
              "TBSP",
              "CUP",
              "PIECE"
            ]
          }
        }
      },
      "RecipeIngredientForm": {
        "required": [
          "amount",
          "ingredientId",
          "unit"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "ingredientId": {
            "type": "integer",
            "format": "int64"
          },
          "unit": {
            "type": "string",
            "enum": [
              "G",
              "ML",
              "TSP",
              "TBSP",
              "CUP",
              "PIECE"
            ]
          }
        }
      },
      "RecipeListItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "kcalPerServing": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string"
          },
          "servings": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RecipeReview": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "rating": {
            "type": "number",
            "format": "double"
          },
          "recipe": {
            "$ref": "#/components/schemas/Recipe"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "RegisterRequest": {
        "required": [
          "email",
          "firstName",
          "lastName",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "firstName": {
            "maxLength": 20,
            "minLength": 3,
            "pattern": "^[A-ZĄĆĘŁŃÓŚŹŻ][a-ząćęłńóśźż]*$",
            "type": "string"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[A-ZĄĆĘŁŃÓŚŹŻ][a-ząćęłńóśźż]*$",
            "type": "string"
          },
          "password": {
            "maxLength": 2147483647,
            "minLength": 5,
            "type": "string"
          }
        }
      },
      "SortObject": {
        "type": "object",
        "properties": {
          "empty": {
            "type": "boolean"
          },
          "sorted": {
            "type": "boolean"
          },
          "unsorted": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "JWT",
        "description": "JWT auth description",
        "in": "header",
        "scheme": "bearer",
        "type": "http"
      }
    }
  }
}